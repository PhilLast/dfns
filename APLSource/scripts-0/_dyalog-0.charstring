⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ Categories:
⍝   ┌──── sample tokens ────┐   ⍝ ┌ First-class (from V14) nameable items
A   1 2 3 4 5 6 # ⍺ ⍵ a b c d   ⍝ * Array
F   + - × ÷ ⌊ ↓ ⍳ ⍴ ⊂ ≢ , f g   ⍝ * Function
H   / ⌿ \ ⍀                 ←   ⍝ * Hybrid function/operator
AF                              ⍝   bound left argument
MOP  ¨ ⍨ &                      ⍝ * Monadic operator
DOP  ⍣                          ⍝   Dyadic operator
JOT  ∘                          ⍝   Jot: compose / null operand
DOT  .                          ⍝   Dot: ref / product
REF                             ⍝   ref:dot
IDX                             ⍝   index/axis
ERR                             ⍝   error
() [IDX]                        ⍝   brackets
⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ Macros:
func=F.H                        ⍝   function
rand=A.func                     ⍝   operand
1st=rand.MOP                    ⍝   first-class item
item=1st.DOP                    ⍝   dottable item
⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝ Bindings:
                                ⍝ ┌ strength
A:DOT→REF REF:item→item         ⍝ 7 ref to dot to item
                                ⍝
A:A→A                           ⍝ 6 array to array: vector (strand)
DOT:A.DOP→ERR                   ⍝   prevents: #.a+b → #.(a+b)
                                ⍝
DOP.JOT:rand→MOP                ⍝ 5 dyadic operator (inc ∘) to right operand
DOT:func→MOP                    ⍝   inner product (with dot as operator)
                                ⍝
rand.JOT:MOP→F                  ⍝ 4 left operand (inc ∘) to monadic operator
func:H→F                        ⍝   hybrid as operator
rand:IDX→rand                   ⍝   axis / index
MOP:H→ERR                       ⍝   prevents: +¨/¨ → (+¨)(/¨)
                                ⍝
A:func→AF                       ⍝ 3 left argument to function (inc hybrid)
IDX:A.func→ERR                  ⍝   prevents: v[0]+1 → v[0](+1)
                                ⍝
AF.F:A→A                        ⍝ 2 function to its right argument
                                ⍝
AF.func:F→F                     ⍝ 1 function to function (train)
                                ⍝
⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝
